unit uCategoriaDAO;

interface

uses
  uCategoria, uConexao, System.SysUtils, FireDAC.Comp.Client, FireDAC.Stan.Param,
  FireDAC.DApt, uUtils, System.Generics.Collections, Vcl.Dialogs;

type
  TCategoriaDAO = class
  public
    function BuscarCategorias: TObjectList<TCategoria>;
    procedure InserirCategoria(const ACategoria: TCategoria);
  end;

implementation

procedure TCategoriaDAO.InserirCategoria(const ACategoria: TCategoria);
begin
  //
end;

function TCategoriaDAO.BuscarCategorias: TObjectList<TCategoria>;
var
  ResultSet: TObjectList<TCategoria>;
  Categoria: TCategoria;
  Qry: TFDQuery;
begin
  Result := nil;
  ResultSet := TObjectList<TCategoria>.Create(True);
  Qry := TFDQuery.Create(nil);

  try
    // Consulta todas as categorias existentes
    Qry.Connection := dmConexao.FDConnection;
    Qry.SQL.Text := 'SELECT * FROM categorias';
    Qry.Open;

    // Se a query não estiver vazia, ou seja, se houver alguma categoria...
    if not Qry.IsEmpty then
    begin
      while not Qry.Eof do
      begin
        try
          Categoria := TCategoria.Create;
          Categoria.ID := Qry.FieldByName('ID').AsInteger;
          Categoria.Nome := Qry.FieldByName('Nome').AsString;
          Categoria.Tipo := StrToCat(Qry.FieldByName('Tipo').AsString);

          ResultSet.Add(Categoria);
          Qry.Next;
        except
          on E: Exception do
            ShowMessage(E.Message);
        end;
      end;

      Result := ResultSet;
    end;
  finally
    Qry.Free;
  end;

end;

end.
