unit uFrmLancamentoBase;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.Edit, uEditMoeda, FMX.Layouts, FMX.StdCtrls,
  FMX.ListBox, uCategoriaDAO, uCategoria, System.Generics.Collections,
  FMX.DateTimeCtrls, FMX.Memo.Types, FMX.ScrollBox, FMX.Memo, uLancamento;

type
  TfrmLancamentoBase = class(TForm)
    txtLancReceita: TText;
    ltLancamento: TLayout;
    ltValor: TLayout;
    txtValor: TText;
    edtValor: TEditMoeda;
    StyleBook1: TStyleBook;
    lnValor: TLine;
    txtCategoria: TText;
    ltOcorrencia: TLayout;
    txtData: TText;
    dtData: TDateEdit;
    lnOcorrencia: TLine;
    ltObservacoes: TLayout;
    txtEntidade: TText;
    edtEntidade: TEdit;
    lnEntidade: TLine;
    ltDescricao: TLayout;
    txtDescricao: TText;
    edtDescricao: TEdit;
    lnDescricao: TLine;
    txtObservacoes: TText;
    btnCancelar: TSpeedButton;
    rtCancelar: TRectangle;
    txtCancelar: TText;
    btnSalvar: TSpeedButton;
    rtSalvar: TRectangle;
    txtSalvar: TText;
    edtObservacoes: TMemo;
    pnObservacoes: TPanel;
    cmbCategoria: TComboBox;
    lnCategoria: TLine;
  protected
    procedure CarregarCategorias(AComboBox: TComboBox; AType: TTipoCategoria);
    function CriarLancamento: TLancamento;
  public
    { Public declarations }
  end;

var
  frmLancamentoBase: TfrmLancamentoBase;

implementation

{$R *.fmx}

function TfrmLancamentoBase.CriarLancamento: TLancamento;
var
  NovoLanc: TLancamento;
begin
  Result := nil;

  try
    // Cria um objeto de lançamento com base nas informações da tela
    // É esse o objeto enviado como parâmetro ao salvar a categoria no BD
    NovoLanc := TLancamento.Create;

    Result := NovoLanc;
  except
      on E: Exception do
      ShowMessage(E.Message);
  end;
end;

procedure TfrmLancamentoBase.CarregarCategorias(AComboBox: TComboBox; AType: TTipoCategoria);
var
  DAO: TCategoriaDAO;
  Lista: TObjectList<TCategoria>;
  Categoria: TCategoria;
  Item: TListBoxItem;
begin
  // Começa limpando os itens que já estavam na combobox
  AComboBox.Clear;
  // Cria o objeto de acesso ao BD
  DAO := TCategoriaDAO.Create;

  try
    // Busca todos as categorias no Banco de Dados e armazena numa lista
    Lista := DAO.BuscarCategorias;

    // Se houver algum objeto na lista...
    if Lista <> nil then
    try
      for Categoria in Lista do
      begin
        // Para cada categoria do tipo informado encontrado, é criado um novo item na ComboBox
        if Categoria.Tipo = AType then
        begin
          Item := TListBoxItem.Create(nil);
          Item.Parent := AComboBox;
          // Vincula a categoria selecionada ao item da combobox
          AComboBox.Items.AddObject(Categoria.Nome, Categoria);
        end;
      end;
    except
      on E: Exception do
        ShowMessage(E.Message);
    end
    else
      ShowMessage('Lista vazia');
  finally
    DAO.Free;
    Lista.Free;
  end;
end;

end.
