unit uFrmFluxoCaixa;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.StdCtrls, uFrmSelecaoLancamento, FMX.Layouts,
  FMX.DateTimeCtrls, FMX.ListBox, uLancamento, uLancamentoDAO, System.Generics.Collections,
  uUtils;

type
  TfrmFluxoCaixa = class(TForm)
    txtFluxo: TText;
    btnInserir: TSpeedButton;
    rtInserir: TRectangle;
    txtInserir: TText;
    ltFiltros: TLayout;
    ltTipo: TLayout;
    txtTipo: TText;
    rdReceitas: TRadioButton;
    StyleBook1: TStyleBook;
    rdDespesas: TRadioButton;
    rdAmbos: TRadioButton;
    ltPeriodo: TLayout;
    txtInicio: TText;
    dtInicio: TDateEdit;
    lnInicio: TLine;
    txtFim: TText;
    dtFim: TDateEdit;
    lnFim: TLine;
    ltCategoria: TLayout;
    txtCategoria: TText;
    cmbCategoria: TComboBox;
    lnCategoria: TLine;
    lbLancamentos: TListBox;
    ltHeader: TLayout;
    Rectangle1: TRectangle;
    txtData: TText;
    txtEntidade: TText;
    txtDescricao: TText;
    txtObservacoes: TText;
    txtValor: TText;
    procedure btnInserirClick(Sender: TObject);
  private
    procedure CarregaListaLancamentos;
    procedure PreencheLabelsItemLancamento(AItem: TListBoxItem; ALancamento: TLancamento);
  public
    { Public declarations }
  end;

var
  frmFluxoCaixa: TfrmFluxoCaixa;

implementation

{$R *.fmx}
{$R *.Windows.fmx MSWINDOWS}

procedure TfrmFluxoCaixa.PreencheLabelsItemLancamento(AItem: TListBoxItem; ALancamento: TLancamento);
var
   LabelData, LabelEntidade, LabelDescricao, LabelObs, LabelValor: TText;
begin
  // Aplica o estilo personalizado
  AItem.StyleLookup :=  'itemLancamentoStyle';
  AItem.Height := 25;

  // Obtém os elementos visuais do estilo
  LabelData := TText(AItem.FindStyleResource('datetext'));
  LabelEntidade := TText(AItem.FindStyleResource('entitytext'));
  LabelDescricao := TText(AItem.FindStyleResource('descriptiontext'));
  LabelObs := TText(AItem.FindStyleResource('obstext'));
  LabelValor := TText(AItem.FindStyleResource('valuetext'));

  // Atualiza os textos se os elementos forem encontrados
  SetLabelText(LabelData, DateToStr(ALancamento.Data));
  SetLabelText(LabelEntidade, ALancamento.Entidade);
  SetLabelText(LabelDescricao, ALancamento.Descricao);
  SetLabelText(LabelObs, ALancamento.Observacoes);
  SetLabelText(LabelValor, FloatToStr(ALancamento.Valor));

end;

procedure TfrmFluxoCaixa.CarregaListaLancamentos;
var
  DAO: TLancamentoDAO;
  Lista: TObjectList<TLancamento>;
  Lancamento: TLancamento;
  Item: TListBoxItem;
begin
  // Limpa a ListBox e libera a memória
  ClearListBox(lbLancamentos);

  try
    DAO := TLancamentoDAO.Create;
    // Busca todos os lançamentos no Banco de Dados e armazena numa lista
    Lista := DAO.BuscarLancamentos;

    // Se houver algum objeto na lista...
    if Lista <> nil then
    try
      for Lancamento in Lista do
      begin
        // Para cada lançamento, é criado um novo ListBoxItem
        Item := TListBoxItem.Create(nil);
        Item.Parent := lbLancamentos;
        // Preenche os elementos visuais do item
        PreencheLabelsItemLancamento(Item, Lancamento);
        // Define o lançamento como conteúdo do item
        Item.TagObject := Lancamento;
      end;
    except
      on E: Exception do
        ShowMessage(E.Message);
    end;
  finally
    DAO.Free;
    Lista.Free;
  end;
end;

procedure TfrmFluxoCaixa.btnInserirClick(Sender: TObject);
begin
  frmSelecaoLancamento.ShowModal;
end;

end.
