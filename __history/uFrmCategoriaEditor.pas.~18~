unit uFrmCategoriaEditor;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.Edit, FMX.StdCtrls, FMX.Layouts, uDialogHelper,
  uUtils, uCategoria, uCategoriaDAO;

type
  TfrmCategoriaEditor = class(TForm)
    txtNovaCategoria: TText;
    edtNomeCategoria: TEdit;
    lblNomeCategoria: TText;
    lnNomeCategoria: TLine;
    StyleBook1: TStyleBook;
    ltInputs: TLayout;
    rdReceita: TRadioButton;
    ltTipo: TLayout;
    rdDespesa: TRadioButton;
    lblTipoCategoria: TText;
    btnSalvar: TSpeedButton;
    rtSalvar: TRectangle;
    txtSalvar: TText;
    btnCancelar: TSpeedButton;
    rtCancelar: TRectangle;
    txtCancelar: TText;
    procedure FormShow(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
  private
    procedure LimparCampos;
    procedure GetDadosCategoriaSelecionada(ACategoria: TCategoria);
    function CriarCategoria: TCategoria;
    function GetTipoCategoria: TTipoCategoria;
  public
    CategoriaSalva: Boolean; // Sinaliza se houve alguma categoria alterada/criada
    CategoriaEmEdicao: TCategoria; // Sinaliza se alguma categoria foi selecionada para edição
  end;

var
  frmCategoriaEditor: TfrmCategoriaEditor;

implementation

{$R *.fmx}

procedure TfrmCategoriaEditor.btnCancelarClick(Sender: TObject);
begin
  if edtNomeCategoria.Text <> '' then
    TDialogHelper.Confirmar('Tem certeza que deseja sair? Nenhum dado será salvo!', procedure begin Close; end)
  else
  begin
    Close;
  end;
end;

procedure TfrmCategoriaEditor.btnSalvarClick(Sender: TObject);
var
  Categoria: TCategoria;
  DAO: TCategoriaDAO;
begin
  Categoria := CriarCategoria;
  DAO := TCategoriaDAO.Create;

  // Valida o nome da categoria e a salva no Banco de Dados
  if ValidarDados(edtNomeCategoria.Text, Texto) then
  begin
    DAO.InserirCategoria(Categoria);
    // Altera a variável para sinalizar que houveram mudanças nas categorias
    CategoriaSalva := True;
    Close;
  end
  else
  ExibirMensagemErro(edtNomeCategoria);
end;

procedure TfrmCategoriaEditor.FormShow(Sender: TObject);
begin
  LimparCampos;
  CategoriaSalva := False;

  // Se o form foi aberto no modo edição, preenche os campos com a categoria selecionada
  if CategoriaEmEdicao <> nil then
  GetDadosCategoriaSelecionada(CategoriaEmEdicao);
end;

procedure TfrmCategoriaEditor.GetDadosCategoriaSelecionada(ACategoria: TCategoria);
begin
  edtNomeCategoria.Text := ACategoria.Nome;
  if ACategoria.Tipo = tcDespesa then
  rdDespesa.IsChecked := True;
end;

function TfrmCategoriaEditor.CriarCategoria: TCategoria;
var
  NovaCat: TCategoria;
begin
  Result := nil;

  try
    NovaCat := TCategoria.Create;
    NovaCat.Nome := edtNomeCategoria.Text;
    NovaCat.Tipo := GetTipoCategoria;
    Result := NovaCat;
  except
      on E: Exception do
      ShowMessage(E.Message);
  end;

end;

function TfrmCategoriaEditor.GetTipoCategoria: TTipoCategoria;
begin
  if rdDespesa.IsChecked = True then
  Result := tcDespesa
  else
  Result := tcReceita;
end;

procedure TfrmCategoriaEditor.LimparCampos;
begin
  edtNomeCategoria.Text := '';
  rdReceita.IsChecked := True;
end;

end.
